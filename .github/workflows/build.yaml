name: Release Application

on:
  push:
    tags:
      - '*'

jobs:
  build_apk:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Install Dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/flutter-apk/app-release.apk.sha1

  build_windows:
    name: Build Windows EXE
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x"
          channel: "stable"

      - name: Enable Windows Support
        run: flutter config --enable-windows-desktop

      - name: Install Dependencies
        run: flutter pub get

      - name: Build Windows App
        run: flutter build windows --release --verbose

      - name: Zip Windows Files
        run: |
          $VERSION="${{ github.ref_name }}" 
          Compress-Archive -Path build/windows/x64/runner/Release/* -DestinationPath "windows-x86_64-${VERSION}.zip"
        shell: pwsh

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-windows
          path: windows-x86_64-${{ github.ref_name }}.zip

  build_linux:
    name: Build Linux App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x"
          channel: "stable"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa
          sudo apt-get install \
            clang cmake git \
            ninja-build pkg-config \
            libgtk-3-dev liblzma-dev \
            libstdc++-12-dev \
            libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0

      - name: Enable Linux Support
        run: flutter config --enable-linux-desktop

      - name: Install Dependencies
        run: flutter pub get

      - name: Build Linux App
        run: flutter build linux --release --verbose

      - name: Zip Linux Files
        run: |
          VERSION="${{ github.ref_name }}" 
          tar -czvf linux-x86_64-${VERSION}.tar.gz build/linux/x64/release/bundle/*
        shell: bash

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-linux
          path: linux-x86_64-${{ github.ref_name }}.tar.gz

  build_linux_arm:
    name: Build Linux App (target ARM64)
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.1" # IMPORTANT: wildcards can't be used here
          channel: "stable"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa
          sudo apt-get install \
            clang cmake git \
            ninja-build pkg-config \
            libgtk-3-dev liblzma-dev \
            libstdc++-12-dev \
            libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0

      - name: Enable Linux Support
        run: flutter config --enable-linux-desktop

      - name: Install Dependencies
        run: flutter pub get

      - name: Build Linux App
        run: flutter build linux --release --verbose

      - name: Zip Linux Files
        run: |
          VERSION="${{ github.ref_name }}" 
          tar -czvf linux-arm64-${VERSION}.tar.gz build/linux/arm64/release/bundle/*
        shell: bash

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-linux
          path: linux-arm64-${{ github.ref_name }}.tar.gz

  build_macos:
    name: Build macOS App
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x"
          channel: "stable"

      - name: Enable macOS Support
        run: flutter config --enable-macos-desktop

      - name: Install Dependencies
        run: flutter pub get

      - name: Build macOS App
        run: flutter build macos --release --verbose

      - name: Zip macOS Files
        run: |
          VERSION="${{ github.ref_name }}"
          ditto -c -k --sequesterRsrc --keepParent build/macos/Build/Products/Release/*.app macos-x86_64-${VERSION}.zip

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-macos
          path: macos-x86_64-${{ github.ref_name }}.zip

  release:
    name: Create GitHub Release
    needs: [build_apk, build_windows, build_linux, build_linux_arm, build_macos]
    runs-on: ubuntu-latest

    steps:
      - name: Download APK from Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-apk
          path: artifacts

      - name: Download Windows App from Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-windows
          path: artifacts

      - name: Download Linux App from Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-linux
          path: artifacts

      - name: Download macOS App from Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-macos
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/app-release.apk
            artifacts/app-release.apk.sha1
            artifacts/windows-x86_64-${{ github.ref_name }}.zip
            artifacts/linux-x86_64-${{ github.ref_name }}.tar.gz
            artifacts/macos-x86_64-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}